name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
          cat >>~/.ssh/config <<END
          Host aws
            HostName $SERVER_HOST
            User $SERVER_USERNAME
            IdentityFile ~/.ssh/key.pem
            StrictHostKeyChecking no
          END

      - name: Copy application files to EC2
        run: |
          rsync -avz -e "ssh -i ~/.ssh/key.pem" \
            --exclude .git \
            --exclude .github \
            --exclude "**/__pycache__" \
            --delete \
            ./ ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:~/fastapi-app/

      - name: Deploy FastAPI and Configure Nginx on EC2
        run: |
          ssh -i ~/.ssh/key.pem ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e # Exit immediately on error

          # Update packages and install dependencies
          sudo apt-get update
          sudo apt-get install -y python3-venv nginx

          # Navigate to the app directory
          cd ~/fastapi-app

          # Clean up Python cache files
          find . -type d -name "__pycache__" -exec rm -rf {} +
          find . -type f -name "*.pyc" -delete

          # Stop the FastAPI service before updating
          sudo systemctl stop fastapi || true

          # Set up virtual environment
          python3 -m venv venv
          source venv/bin/activate

          # Install Python dependencies
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install uvicorn

          # Create systemd service for FastAPI
          sudo tee /etc/systemd/system/fastapi.service > /dev/null <<EOL
          [Unit]
          Description=FastAPI application
          After=network.target

          [Service]
          User=${USER}
          WorkingDirectory=/home/${USER}/fastapi-app
          ExecStart=/home/${USER}/fastapi-app/venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000
          Restart=always

          [Install]
          WantedBy=multi-user.target
          EOL

          # Create Nginx configuration
          sudo tee /etc/nginx/sites-available/fastapi > /dev/null <<EOL
          server {
              listen 80;
              server_name \$host;
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
              }
          }
          EOL

          # Enable Nginx configuration and restart
          sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo nginx -t  # Test the Nginx config

          # Reload systemd and restart services
          sudo systemctl daemon-reload
          sudo systemctl enable fastapi
          sudo systemctl restart fastapi
          sudo systemctl restart nginx

          # Wait for services to start and verify
          sleep 5
          sudo systemctl status fastapi --no-pager
          sudo systemctl status nginx --no-pager
          EOF
